CREATE TABLE IF NOT EXISTS tags (id SERIAL PRIMARY KEY, "name" VARCHAR(255) NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL);
ALTER TABLE tags ADD CONSTRAINT tags_name_unique UNIQUE ("name");
CREATE INDEX tags_created_at ON tags (created_at);
CREATE TABLE IF NOT EXISTS task_id (id uuid PRIMARY KEY, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL);
CREATE INDEX task_id_created_at ON task_id (created_at);
CREATE TABLE IF NOT EXISTS task_associated_tags (id SERIAL PRIMARY KEY, task_id uuid NOT NULL, tag_id INT NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, CONSTRAINT fk_task_associated_tags_task_id__id FOREIGN KEY (task_id) REFERENCES task_id(id) ON DELETE RESTRICT ON UPDATE RESTRICT, CONSTRAINT fk_task_associated_tags_tag_id__id FOREIGN KEY (tag_id) REFERENCES tags(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE INDEX task_associated_tags_created_at ON task_associated_tags (created_at);
CREATE TABLE IF NOT EXISTS task_complete_time (id SERIAL PRIMARY KEY, task_id uuid NOT NULL, completed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, CONSTRAINT fk_task_complete_time_task_id__id FOREIGN KEY (task_id) REFERENCES task_id(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE INDEX task_complete_time_completed_at ON task_complete_time (completed_at);
CREATE TABLE IF NOT EXISTS task_content (id SERIAL PRIMARY KEY, task_id uuid NOT NULL, title VARCHAR(200) NOT NULL, description TEXT NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, CONSTRAINT fk_task_content_task_id__id FOREIGN KEY (task_id) REFERENCES task_id(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE INDEX task_content_created_at ON task_content (created_at);
CREATE TABLE IF NOT EXISTS task_due_date (id SERIAL PRIMARY KEY, task_id uuid NOT NULL, due_date DATE NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, CONSTRAINT fk_task_due_date_task_id__id FOREIGN KEY (task_id) REFERENCES task_id(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE INDEX task_due_date_created_at ON task_due_date (created_at);
CREATE TABLE IF NOT EXISTS task_priority (id SERIAL PRIMARY KEY, task_id uuid NOT NULL, priority VARCHAR(10) NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, CONSTRAINT fk_task_priority_task_id__id FOREIGN KEY (task_id) REFERENCES task_id(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE INDEX task_priority_created_at ON task_priority (created_at);
CREATE TABLE IF NOT EXISTS task_status (id SERIAL PRIMARY KEY, task_id uuid NOT NULL, status VARCHAR(5) NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, CONSTRAINT fk_task_status_task_id__id FOREIGN KEY (task_id) REFERENCES task_id(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE INDEX task_status_created_at ON task_status (created_at);
CREATE SEQUENCE IF NOT EXISTS tags_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS task_associated_tags_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS task_complete_time_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS task_content_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS task_due_date_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS task_priority_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS task_status_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
