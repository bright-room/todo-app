CREATE TABLE IF NOT EXISTS account_id (id uuid PRIMARY KEY, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL);
CREATE INDEX account_id_created_at ON account_id (created_at);
CREATE TABLE IF NOT EXISTS "password" (id SERIAL PRIMARY KEY, account_id uuid NOT NULL, hash VARCHAR(255) NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, CONSTRAINT fk_password_account_id__id FOREIGN KEY (account_id) REFERENCES account_id(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE INDEX password_created_at ON "password" (created_at);
CREATE TABLE IF NOT EXISTS task_id (id uuid PRIMARY KEY, account_id uuid NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, CONSTRAINT fk_task_id_account_id__id FOREIGN KEY (account_id) REFERENCES account_id(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE INDEX task_id_created_at ON task_id (created_at);
CREATE TABLE IF NOT EXISTS login_mail_address (id SERIAL PRIMARY KEY, account_id uuid NOT NULL, mail_address VARCHAR(128) NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, CONSTRAINT fk_login_mail_address_account_id__id FOREIGN KEY (account_id) REFERENCES account_id(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE INDEX login_mail_address_created_at ON login_mail_address (created_at);
CREATE TABLE IF NOT EXISTS task_status (id SERIAL PRIMARY KEY, task_id uuid NOT NULL, status VARCHAR(5) NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, CONSTRAINT fk_task_status_task_id__id FOREIGN KEY (task_id) REFERENCES task_id(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE INDEX task_status_created_at ON task_status (created_at);
CREATE TABLE IF NOT EXISTS task_content (id SERIAL PRIMARY KEY, task_id uuid NOT NULL, title VARCHAR(200) NOT NULL, description TEXT NOT NULL, created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, CONSTRAINT fk_task_content_task_id__id FOREIGN KEY (task_id) REFERENCES task_id(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE INDEX task_content_created_at ON task_content (created_at);
CREATE TABLE IF NOT EXISTS task_complete_time (id SERIAL PRIMARY KEY, task_id uuid NOT NULL, completed_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP NOT NULL, CONSTRAINT fk_task_complete_time_task_id__id FOREIGN KEY (task_id) REFERENCES task_id(id) ON DELETE RESTRICT ON UPDATE RESTRICT);
CREATE INDEX task_complete_time_completed_at ON task_complete_time (completed_at);
CREATE SEQUENCE IF NOT EXISTS password_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS login_mail_address_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS task_status_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS task_content_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
CREATE SEQUENCE IF NOT EXISTS task_complete_time_id_seq START WITH 1 MINVALUE 1 MAXVALUE 9223372036854775807;
